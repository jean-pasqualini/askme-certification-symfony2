category: Automated tests
questions:
    -
        question: 'Using PHPUnit, which method names are used to share test setup code?'
        answers:
            - {value: setUp(),       correct: true}
            - {value: __construct(), correct: false}
            - {value: shutdown(),    correct: false}
            - {value: tearDown(),    correct: true}
    -
        question: 'How to disable constructor when mocking an object?'
        answers:
            - {value: $this->getMock('My\Class')->disableOriginalConstructor()->getMock(),        correct: false}
            - {value: $this->disableOriginalConstructor('My\Class'),                              correct: false}
            - {value: $this->getMockBuilder('My\Class')->disableOriginalConstructor()->getMock(), correct: true}
            - {value: $this->getMockBuilder('My\Class')->getMock()->disableConstructor(),         correct: false}
    -
        question: 'Which Symfony class offers method to test commands?'
        answers:
            - {value: Symfony\Component\Console\Tester\Command,           correct: false}
            - {value: Symfony\Component\Console\Tester\CommandTester,     correct: true}
            - {value: Symfony\Component\Console\Tester\CommandUnitTester, correct: false}
            - {value: Symfony\Component\Console\Tester\CommandUnit,       correct: false}
    -
        question: 'Using PHPUnit, which method allows to specify a mock response on second call?'
        answers:
            - {value: $mock->expects($this->at(2)),      correct: true}
            - {value: $mock->expects($this->exactly(2)), correct: false}
            - {value: $mock->expects($this->on(2)),      correct: false}
            - {value: $mock->expects($this->call(2)),    correct: false}
    -
        question: 'Using PHPUnit, which method allows you to expect an exception to be thrown?'
        answers:
            - {value: $this->setExpectedException('MyException'), correct: true}
            - {value: $this->setExceptionExpected('MyException'), correct: false}
            - {value: $this->expectException('MyException'),      correct: false}
            - {value: $this->setExpected('MyException'),          correct: false}
    -
        question: 'What command used for run all of your application tests by default?'
        answers:
            - {value: phpunit -c app/,  correct: true}
            - {value: phpunit app/,     correct: false}
            - {value: phpunit -c,       correct: false}
            - {value: phpunit,          correct: false}
    -
        question: 'Where live functional tests in Symfony (inside a bundle structure)?'
        answers:
            - {value: Tests/,               correct: false}
            - {value: Tests/Controller/,    correct: true}
            - {value: Tests/Controllers/,   correct: false}
            - {value: Controller/,          correct: false}
    -
        question: 'Using Symfony\Component\BrowserKit\Client which of these methods can be called?'
        answers:
            - {value: back(),     correct: true}
            - {value: forward(),  correct: true}
            - {value: insulate(), correct: true}
            - {value: restart(),  correct: true}
            - {value: next(),     correct: false}
    -
        question: 'What is the correct CssSelector class namespace?'
        answers:
            - {value: Symfony\Component\CssSelector\CssSelector,  correct: true}
            - {value: Symfony\Component\BrowserKit\CssSelector,   correct: false}
            - {value: Symfony\Component\DomCrawler\CssSelector,   correct: false}
            - {value: Symfony\Bundle\FrameworkBundle\CssSelector, correct: false}
    -
        question: 'Using Swiftmailer, which of these configuration allows to disable email delivery?'
        answers:
            - {value: swiftmailer.disable_delivery: true, correct: true}
            - {value: swiftmailer.delivery: false,        correct: false}
            - {value: swiftmailer.enable_delivery: false, correct: false}
            - {value: swiftmailer.disable: true,          correct: false}
